kmeans(2, 3)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y, col = km0bj$cluster, pch = 19, cex = 2)
plot(x,y, col = kmObj$cluster, pch = 19, cex = 2)
plot(kmObj$centers , col = c("black","red","green"), pch = 19, cex = 2, lwd = 3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 2, cex = 2'')
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 2, cex = 2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1 <- svd(dataMatrix)
svd1$v[,1]
svd1$d
head(constantMatrix)
d
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u %*% svd1$d %*% t(svd1$v)
a1 <- svd1$u %*% t(svd1$v)*svd1$d
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a1 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage
myImage(a2)
myImage <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
reset()
swirl()
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(562:563)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd%subject))
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(ssd[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd(scale(sub1[,-c(562,563)]))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
0
reset()
setwd("./RRCourseProject1")
df <- read.csv("activity.csv")
View(df)
str(df$steps)
summary(df$steps)
table(is.na(df$steps))
mean(df$steps)
summarize(df, mean = mean(steps))
library(dplyr)
summarize(df, mean = mean(steps))
df <- read.csv("activity.csv", na.strings = "NA")
summarize(df, mean = mean(steps))
?mean
head(df)
summary(date)
summary(df$date)
df %>% group_by(date) %>% summarize(sum = sum(steps, na.rm = TRUE))
dfSummary <- summarize(df, total.steps = sum(steps, na.rm = TRUE), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
dfSummary
df <- group_by(df, date)
dfSummary <- summarize(df, total.steps = sum(steps, na.rm = TRUE), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
dfSummary
library(ggplot2)
histSteps <- ggplot(data = histSummary, aes(total.steps))
histSteps <- ggplot(data = dfSummary, aes(total.steps))
histSteps + geom_histogram()
?geom_histogram
histSteps + geom_histogram(fill = "lightblue")
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram("lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
histSteps
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram("lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram("lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
histSteps <- ggplot(data = dfSummary, aes(total.steps))
histSteps + geom_histogram
histSteps + geom_histogram()
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
summarize(df, mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE)
)
df <- read.csv("activity.csv", na.strings = "NA")
summarize(df, mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
View(df)
dfGrouped2 <- group_by(df, interval)
dfSummary2 <- summarize(dfGrouped2, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across all days
avgSteps <- ggplot(data = dfSummary2, aes(mean, interval)) +
geom_quantile(color = "green") +
labs(x = "Interval", y = "Mean", title = "Mean Steps Across interval") +
theme_bw()
plot(avgSteps)
dfGrouped2 <- group_by(df, interval)
dfSummary2 <- summarize(dfGrouped2, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across all days
avgSteps <- ggplot(data = dfSummary2, aes(mean, interval)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean", title = "Mean Steps Across interval") +
theme_bw()
plot(avgSteps)
max(dfSummary2$mean)
max(dfSummary2[max{dfSummary2$mean}])
max(dfSummary2[max{dfSummary2$mean}],)
max(dfSummary2[max(dfSummary2$mean)],)
max(dfSummary2[dfSummary2$mean == max(dfSummary2$mean),)
dfSummary2[dfSummary2$mean == max(dfSummary2$mean),
dfSummary2[dfSummary2$mean == max(dfSummary2$mean)]
dfSummary2[dfSummary2$mean == max(dfSummary2$mean),]
dfSummary2$interval[dfSummary2$mean == max(dfSummary2$mean)]
dfGrouped <- group_by(df, date)
dfSummary <- summarize(dfGrouped, total.steps = sum(steps, na.rm = TRUE))
### Histogram of total steps per day
histSteps <- ggplot(avgSteps)ps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
summarize(df, mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
dfGrouped2 <- group_by(df, interval)
dfSummary2 <- summarize(dfGrouped2, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across all days
avgSteps <- ggplot(data = dfSummary2, aes(mean, interval)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgSteps)
dfSummary$mean
dfSummary2$mean
dfSummary2[2]
dfSummary2[[2]]
table(is.na(df))
table(is.na(df$steps))
table(is.na(df$date))
table(is.na(df$interval))
sum(is.na(df$steps))
length(!complete.cases(df))
length(complete.cases(df))
complete.cases(df)
sum(complete.cases(df))
sum(!complete.cases(df))
?replace
is.na(dfGrouped2$steps)
is.na(dfGrouped2[1])
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na.(steps), mean(steps, na.rm)))
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na.(steps), mean(steps, na.rm = TRUE)))
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na(steps), mean(steps, na.rm = TRUE)))
dfImputed
is.na(dfImputed)
table(is.na(dfImputed))
?complete.cases
steps2 = replace(dfGrouped$steps, is.na(steps), 1)
steps2 = replace(dfGrouped$steps, is.na(dfGrouped$steps), 1)
?replace
steps2 = replace(dfGrouped$steps, c[1,1,1,1], 1)
steps2 = replace(dfGrouped$steps, c[1:nrow(dfGrouped$steps)], 1)
steps2 <- replace(dfGrouped$steps, c[1:nrow(dfGrouped$steps)], 1)
nrow(dfGrouped$steps)
dfGrouped
nrow(dfGrouped$steps)
nrow(dfGrouped)
steps2 <- replace(dfGrouped$steps, c[1:nrow(dfGrouped)], 1)
steps2 <- replace(dfGrouped$steps, 1:nrow(dfGrouped), 1)
tail(steps2)
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na(steps), mean(steps,
na.rm = TRUE)))
dfImputedSum <- dfImputed %>% ungroup() %>% group_by(date) %>% summarize(total.steps =
sum(steps, na.rm = TRUE))
### Histogram of total steps recorded each day
histStepsImp <- ggplot(avgSteps)ps <- ggplot(data = dfImputedSum, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency, Imputed") +
theme_bw()
print(histStepsImp)
### Mean and median total steps per day (Imputed)
summarize(ungroup(dfImputed), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na(steps), mean(steps,
na.rm = TRUE)))
dfImputedSum <- dfImputed %>% ungroup() %>% group_by(date) %>% summarize(total.steps =
sum(steps, na.rm = TRUE))
### Histogram of total steps recorded each day
histStepsImp <- ggplot(data = dfImputedSum, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency, Imputed") +
theme_bw()
print(histStepsImp)
### Mean and median total steps per day (Imputed)
summarize(ungroup(dfImputed), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
meanmed <- summarize(df, mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
print(meanmed)
class(meanmed)
class(meanmedImp)
meanmedImp <- summarize(ungroup(dfImputed), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
print(meanmedImp)
class(meanmedImp)
meanmedOvr <- bind_row(meanmed, meanmedImp)
meanmedOvr <- bind_rows(meanmed, meanmedImp)
View(meanmedOvr)
print(histSteps)
View(meanmedOvr)
print(histSteps)
View(dfImputedSum)
View(meanmedImp)
View(histStepsImp)
View(histSteps)
print(histStepsImp)
View(dfImputed)
View(dfImputed)
is.na(dfImputed)
table(is.na(dfImputed))
meanmedImp
meanmed
meanmedOvr <- bind_rows(meanmed, meanmedImp)
print(meanmedOvr)
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na(steps), median(steps,
na.rm = TRUE)))
meanmedImp <- summarize(ungroup(dfImputed), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
print(meanmedImp)
meanmedImp <- summarize(ungroup(dfImputed), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
print(meanmedImp)
meanmedOvr <- bind_cols(c("As-is", "Imputed"), bind_rows(meanmed, meanmedImp))
print(meanmedOvr)
meanmedOvr <- bind_cols(Type = c("As-is", "Imputed"), bind_rows(meanmed, meanmedImp))
print(meanmedOvr)
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na(steps), median(steps,
na.rm = TRUE)))
dfImputedSum <- dfImputed %>% ungroup() %>% group_by(date) %>% summarize(total.steps =
sum(steps, na.rm = TRUE))
### Histogram of total steps recorded each day
histStepsImp <- ggplot(data = dfImputedSum, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency, Imputed") +
theme_bw()
print(histStepsImp)
print(histStepsImp)
print(histSteps)
print(histStepsImp)
print(histSteps)
class(dfImputed[2])
class(dfImputed["date")
class(dfImputed["date"])
class(dfImputed[["date"])
class(dfImputed[["date"]])
library(readr)
parse_date(dfImputed$date)
parse_date(as.character(dfImputed$date)
)
dfImputed$dow <- weekday(dfImputed$date)
dfImputed$dow <- weekdays(dfImputed, dfImputed$date)
?weekdays()
dfImputed$dow <- weekdays(dfImputed$date)
dfImputed$date <- parse_date(as.character(dfImputed$date))
dfImputed$dow <- weekdays(dfImputed$date)
View(dfImputed)
?month
months(dfImputed$date[1])
dfImputed$dayofweek <- weekdays(dfImputed$date)
dfImputed$dow <- NULL
dfImputed$date <- parse_date(as.character(dfImputed$date))
dfImputed$dayofweek <- weekdays(dfImputed$date)
dfImputeddayofweek <- dfImputed %>% ungroup %>% group_by(dayofweek)
dfSummaryImpDow <- dfImputeddayofweek %>% summarize(mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across days of week
avgStepsDow <- ggplot(data = dfSummary2, aes(mean, interval)) +
geom_line(aes(color = dayofweek)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgStepsDow)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(mean, interval)) +
geom_line(aes(color = dayofweek)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgStepsDow)
?weekend()
?weekend
?weekdays
?mutate
fImputed <- mutate(dfImputed, daytype = if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"}{else "Weekday"})
fImputed <- mutate(dfImputed, daytype = if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"}
fImputed <- mutate(dfImputed, daytype = if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"})
fImputed
fImputed <- mutate(dfImputed, daytype = (if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"}{"Weekday"})
fImputed <- mutate(dfImputed, daytype = (if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"}else{"Weekday"})
fImputed <- mutate(dfImputed, daytype = (if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"}else{"Weekday"}))
warnings()
fImp <- lapply(dfImputed$dayofweek, function(dfImputed$dayofweek){if(dayofweek== "Saturday" | dayofweek == "Sunday"){"Weekend"}{else "Weekday"})
dfSummaryImpDow <- dfImputeddayofweek %>% summarize(mean = mean(steps, na.rm = TRUE)})
dfImputed <- dfImputed %>% mutate(daytype = ifelse(dayofweek == "Saturday" | dayofweek == "Sunday", "Weekend","Weekday"))
View(dfImputed)
dfImputed$date <- parse_date(as.character(dfImputed$date))
dfImputed$dayofweek <- weekdays(dfImputed$date)
dfImputed <- dfImputed %>% mutate(daytype = ifelse(dayofweek == "Saturday" |
dayofweek == "Sunday", "Weekend","Weekday"))
dfSummaryImpDow <- summarize(dfImputed, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across days of week
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(mean, interval)) +
geom_line(aes(color = daytype)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgStepsDow)
dfImputed <- dfImputed %>% mutate(daytype = ifelse(dayofweek == "Saturday" |
dayofweek == "Sunday", "Weekend","Weekday"))
dfSummaryImpDow <- summarize(dfImputed, mean = mean(steps, na.rm = TRUE)
)
View(dfSummaryImpDow)
dfImputed <- dfImputed %>% mutate(daytype = ifelse(dayofweek == "Saturday" |
dayofweek == "Sunday", "Weekend","Weekday")) %>% group_by(daytype)
dfImputed
dfImputed <- dfImputed %>% mutate(daytype = ifelse(dayofweek == "Saturday" |
dayofweek == "Sunday", "Weekend","Weekday")) %>% group_by(interval, daytype)
df <- read.csv("activity.csv", na.strings = "NA")
## Question 1
### Create summary dataset
dfGrouped <- group_by(df, date)
dfSummary <- summarize(dfGrouped, total.steps = sum(steps, na.rm = TRUE))
### Histogram of total steps per day
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
### Mean and median total steps per day
meanmed <- summarize(df, mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
print(meanmed)
## Question 2
## Create summary dataset
dfGrouped2 <- group_by(df, interval)
dfSummary2 <- summarize(dfGrouped2, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across all days
avgSteps <- ggplot(data = dfSummary2, aes(mean, interval)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgSteps)
### Calculate innterval on average which has maximum number of steps
dfSummary2$interval[dfSummary2$mean == max(dfSummary2$mean)]
## Question 3
### Calculate total number of NAs
sum(!complete.cases(df))
### Imputing data with median of interval
dfImputed <- mutate(dfGrouped2, steps = replace(steps, is.na(steps), median(steps,
na.rm = TRUE)))
dfImputedSum <- dfImputed %>% ungroup() %>% group_by(date) %>% summarize(total.steps =
sum(steps, na.rm = TRUE))
### Histogram of total steps recorded each day
histStepsImp <- ggplot(data = dfImputedSum, aes(total.steps)) +
geom_histogram(fill = "lightblue") +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency, Imputed") +
theme_bw()
print(histStepsImp)
### Mean and median total steps per day (Imputed)
meanmedImp <- summarize(ungroup(dfImputed), mean = mean(steps, na.rm = TRUE), median = median(steps, na.rm = TRUE))
print(meanmedImp)
### Compare mean and median against imputed and as-is dataset
meanmedOvr <- bind_cols(Type = c("As-is", "Imputed"), bind_rows(meanmed, meanmedImp))
print(meanmedOvr)
## Question 4
## Converting date column to date format and parsing day of week
dfImputed$date <- parse_date(as.character(dfImputed$date))
dfImputed$dayofweek <- weekdays(dfImputed$date)
dfImputed <- dfImputed %>% mutate(daytype = ifelse(dayofweek == "Saturday" |
dayofweek == "Sunday", "Weekend","Weekday")) %>% group_by(interval, daytype)
dfSummaryImpDow <- summarize(dfImputed, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across days of week
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(mean, interval)) +
geom_line(aes(color = daytype)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgStepsDow)
dfImputed
dfSummaryImpDow
View(df)
print(histSteps)
print(avgSteps)
View(dfSummary2)
avgSteps <- ggplot(data = dfSummary2, aes(mean, interval)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
coord_cartesian(xlim = c(0, 2500)) +
theme_bw()
print(avgSteps)
View(dfSummary2)
avgSteps <- ggplot(data = dfSummary2, aes(interval, mean)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgSteps)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(interval, mean)) +
geom_line(aes(color = daytype)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgStepsDow)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(interval, mean)) +
geom_line(aes(color = daytype)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
facet_grid(daytype~.)
theme_bw()
print(avgStepsDow)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(interval, mean)) +
geom_line(aes(color = daytype)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
facet_grid(daytype~.) +
theme_bw()
print(avgStepsDow)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(interval, mean)) +
geom_line() +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
facet_grid(daytype~.) +
theme_bw()
print(avgStepsDow)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(interval, mean)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
facet_grid(daytype~.) +
theme_bw()
print(avgStepsDow)
avgStepsDow <- ggplot(data = dfSummaryImpDow, aes(interval, mean)) +
geom_line(aes(color = daytype)) +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
facet_grid(daytype~.) +
theme_bw()
print(avgStepsDow)
print(histSteps)
View(histSteps)
View(dfSummary)
histSteps
View(histSteps)
histSteps$data
View(dfSummary)
View(dfSummary)
View(histSteps)
histSteps
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue", binwidth = 500) +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
histSteps
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue", binwidth = 1000) +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
histSteps <- ggplot(data = dfSummary, aes(total.steps)) +
geom_histogram(fill = "lightblue", binwidth = 1000) +
labs(x = "Total Steps", y = "Days Recorded", title = "Total Steps by Frequency") +
theme_bw()
print(histSteps)
dfGrouped2 <- group_by(df, interval)
dfSummary2 <- summarize(dfGrouped2, mean = mean(steps, na.rm = TRUE))
### Line graph of mean of steps taken across all days
avgSteps <- ggplot(data = dfSummary2, aes(interval, mean)) +
geom_line(color = "green") +
labs(x = "Interval", y = "Mean Steps", title = "Mean Steps Across interval") +
theme_bw()
print(avgSteps
)
View(dfSummary)
setwd("..")
setwd("C:/Users/Davin/datasciencecoursera/RepData_PeerAssessment1")
